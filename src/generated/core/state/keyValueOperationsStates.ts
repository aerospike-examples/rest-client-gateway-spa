/*
 * WARNING: DO NOT EDIT THIS FILE. This file is generated by yarn gen. Any changes will be overwritten.
 */

import { Record, RestClientError } from '../api';
import SimpleResponse from '../types/SimpleResponse';

export interface GetRecordNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * Record
     */
    readonly successValue: Record;
    readonly inProgress: boolean;
}

export interface RecordExistsNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface CreateRecordNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface ReplaceRecordNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface DeleteRecordNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface UpdateRecordNamespaceKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface GetRecordNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * Record
     */
    readonly successValue: Record;
    readonly inProgress: boolean;
}

export interface RecordExistsNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface CreateRecordNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface ReplaceRecordNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface DeleteRecordNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface UpdateRecordNamespaceSetKeyStateFields {
    /**
     * RestClientError
     */
    readonly errorValue: RestClientError;
    /**
     * SimpleResponse
     */
    readonly successValue: SimpleResponse;
    readonly inProgress: boolean;
}

export interface KeyValueOperationsStateFields {
    readonly getRecordNamespaceKey: GetRecordNamespaceKeyStateFields;
    readonly recordExistsNamespaceKey: RecordExistsNamespaceKeyStateFields;
    readonly createRecordNamespaceKey: CreateRecordNamespaceKeyStateFields;
    readonly replaceRecordNamespaceKey: ReplaceRecordNamespaceKeyStateFields;
    readonly deleteRecordNamespaceKey: DeleteRecordNamespaceKeyStateFields;
    readonly updateRecordNamespaceKey: UpdateRecordNamespaceKeyStateFields;
    readonly getRecordNamespaceSetKey: GetRecordNamespaceSetKeyStateFields;
    readonly recordExistsNamespaceSetKey: RecordExistsNamespaceSetKeyStateFields;
    readonly createRecordNamespaceSetKey: CreateRecordNamespaceSetKeyStateFields;
    readonly replaceRecordNamespaceSetKey: ReplaceRecordNamespaceSetKeyStateFields;
    readonly deleteRecordNamespaceSetKey: DeleteRecordNamespaceSetKeyStateFields;
    readonly updateRecordNamespaceSetKey: UpdateRecordNamespaceSetKeyStateFields;
}

export type KeyValueOperationsState = KeyValueOperationsStateFields;
